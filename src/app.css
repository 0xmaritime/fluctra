/* Define Tailwind CSS v4 layers */
@layer theme, base, components, utilities;

/* Import Tailwind's base, components, and utilities */
@import "tailwindcss";

/* Define custom theme properties exactly as per Fluctra Meridian Design System v1.0 */
@theme {
  /* Color Palette (OKLCH - Light Mode Default) */
  /* Primary (Deep Ocean Blue) */
  --color-primary-50: oklch(97% 0.03 250);
  --color-primary-100: oklch(94% 0.06 250);
  --color-primary-300: oklch(85% 0.1 250);
  --color-primary-500: oklch(68% 0.18 250);
  --color-primary-600: oklch(60% 0.21 250);
  --color-primary-700: oklch(52% 0.23 250);
  --color-primary-900: oklch(35% 0.18 250);

  /* Secondary (Seafoam Teal) */
  --color-secondary-100: oklch(95% 0.03 190);
  --color-secondary-300: oklch(88% 0.06 190);
  --color-secondary-500: oklch(78% 0.1 190);
  --color-secondary-700: oklch(60% 0.12 190);
  /* Interpolated for badge text based on DS v1.0 example pattern */
  --color-secondary-800: oklch(45% 0.14 190);

  /* Neutrals (Grays - Crisp & Clean) */
  --color-gray-0: oklch(100% 0 0);
  --color-gray-50: oklch(99% 0.002 240);
  --color-gray-100: oklch(97% 0.004 240);
  --color-gray-200: oklch(94% 0.006 240);
  --color-gray-300: oklch(90% 0.008 240);
  --color-gray-400: oklch(82% 0.01 240);
  --color-gray-500: oklch(72% 0.012 240);
  --color-gray-600: oklch(62% 0.015 240);
  --color-gray-700: oklch(52% 0.018 240);
  --color-gray-800: oklch(42% 0.015 240);
  --color-gray-900: oklch(32% 0.012 240);
  /* Added gray-950 based on dark mode variables needing it */
  --color-gray-950: oklch(22% 0.008 240); /* Interpolated */
  --color-gray-1000: oklch(15% 0.005 240);

  /* Semantic Colors (Success, Warning, Error) */
  --color-success-100: oklch(96% 0.05 145);
  --color-success-500: oklch(72% 0.16 145);
  --color-success-700: oklch(58% 0.18 145);
  /* Interpolated for badge text based on DS v1.0 example pattern */
  --color-success-800: oklch(45% 0.2 145);

  --color-warning-100: oklch(97% 0.06 85);
  --color-warning-500: oklch(82% 0.17 85);
  --color-warning-700: oklch(68% 0.18 85);
  /* Interpolated for badge text based on DS v1.0 example pattern */
  --color-warning-800: oklch(55% 0.2 85);

  --color-error-100: oklch(96% 0.06 25);
  --color-error-500: oklch(72% 0.23 25);
  --color-error-700: oklch(58% 0.25 25);
  /* Interpolated for badge text based on DS v1.0 example pattern */
  --color-error-800: oklch(45% 0.27 25);

  /* Interpolated/Alias for Neutral badge text */
  --color-neutral-100: var(--color-gray-100);
  --color-neutral-800: var(--color-gray-800);
  /* Interpolated/Alias for Primary badge text */
  --color-primary-800: oklch(40% 0.2 250);

  /* Base Semantic Variables */
  --color-background: var(--color-gray-50);
  --color-foreground: var(--color-gray-1000);
  --color-card-background: var(--color-gray-0);
  --color-text-primary: var(--color-gray-900);
  --color-text-secondary: var(--color-gray-600);
  --color-text-placeholder: var(--color-gray-400);
  --color-text-disabled: var(--color-gray-400);
  --color-border-default: var(--color-gray-200);
  --color-border-subtle: var(--color-gray-100);
  --color-border-interactive: var(--color-primary-500);
  --color-interactive: var(--color-primary-600);
  --color-interactive-hover: var(--color-primary-700);
  --color-interactive-text: var(--color-gray-0);
  --color-shadow: oklch(0% 0 0);

  /* Dark Mode Overrides */
  @media (prefers-color-scheme: dark) {
    --color-background: var(--color-gray-1000);
    --color-foreground: var(--color-gray-50);
    --color-card-background: var(--color-gray-950);
    --color-text-primary: var(--color-gray-50);
    --color-text-secondary: var(--color-gray-400);
    --color-text-placeholder: var(--color-gray-600);
    --color-text-disabled: var(--color-gray-700);
    --color-border-default: var(--color-gray-800);
    --color-border-subtle: var(--color-gray-900);
    --color-interactive: var(--color-primary-500);
    /* DS v1.0 uses primary-400, which is not defined. Using 300 as closest defined lighter shade. */
    --color-interactive-hover: var(--color-primary-300);
    --color-interactive-text: var(--color-gray-0);
    --color-shadow: oklch(0% 0 0);
  }

  /* Typography */
  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
  /* Font Size Base - Using 17px as suggested in DS notes */
  --font-size-base: 1.0625rem; /* 17px */

  /* Spacing (8px Grid) */
  --spacing: 0.5rem; /* 8px */

  /* Borders & Radii */
  --radius-md: 0.5rem;   /* 8px - Used for rounded-lg */
  --radius-lg: 0.75rem;  /* 12px - Used for rounded-xl */
  --radius-xl: 1rem;     /* 16px - Used for rounded-2xl */
  --radius-full: 9999px;

  /* Shadows */
  --shadow-sm: 0 1px 2px 0 oklch(var(--color-shadow) / 0.03);
  --shadow-md: 0 2px 8px -1px oklch(var(--color-shadow) / 0.06), 0 2px 4px -2px oklch(var(--color-shadow) / 0.04);
  --shadow-lg: 0 8px 16px -4px oklch(var(--color-shadow) / 0.08), 0 4px 6px -3px oklch(var(--color-shadow) / 0.05);
  --shadow-xl: 0 16px 24px -8px oklch(var(--color-shadow) / 0.08), 0 6px 10px -6px oklch(var(--color-shadow) / 0.06);

  /* Animation & Motion */
   --ease-out-expo: cubic-bezier(0.16, 1, 0.3, 1);
}

/* Custom base styles */
@layer base {
  :root {
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
  }

  html, body {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    overflow-x: hidden;
  }

  body {
    font-family: var(--font-sans);
    font-size: var(--font-size-base); /* 17px */
    line-height: 1.5;
    background-color: var(--color-background);
    color: var(--color-text-primary);
  }

  h1, h2, h3, h4, h5, h6 {
    font-weight: 700;
    color: var(--color-foreground);
    line-height: 1.2;
    /* Applying sizes using Tailwind utilities for consistency */
  }

  h1 { @apply text-4xl; }  /* 40px - Approx for 17px base */
  h2 { @apply text-3xl; }  /* 30px - Approx for 17px base */
  h3 { @apply text-2xl; }  /* 24px - Approx for 17px base */
  h4 { @apply text-xl; }   /* 20px - Approx for 17px base */
  h5 { @apply text-lg; }   /* 18px - Approx for 17px base */
  h6 { @apply text-base; } /* 17px */

  a {
    color: var(--color-interactive);
    text-decoration: none;
    transition: color 150ms var(--ease-out-expo);
  }

  a:hover {
    color: var(--color-interactive-hover);
    text-decoration: underline;
  }

  #app {
    height: 100%;
    width: 100%;
    display: contents; /* Keep this for SvelteKit structure */
  }
}

/* Custom component styles */
@layer components {
  .glass {
    /* Light Mode Default */
    background-color: oklch(99% 0.002 240 / 0.65); /* gray-50 @ 65% */
    backdrop-filter: blur(20px) saturate(180%);
    border: 1px solid oklch(97% 0.004 240 / 0.2); /* gray-100 @ 20% */

    @media (prefers-color-scheme: dark) {
      /* Dark Mode */
      background-color: oklch(15% 0.005 240 / 0.7); /* gray-1000 @ 70% */
      backdrop-filter: blur(24px) saturate(180%);
      border: 1px solid oklch(32% 0.012 240 / 0.15); /* gray-900 @ 15% */
    }
  }

  /* Define a standard container */
  .app-container {
    @apply max-w-7xl mx-auto px-4 md:px-6 lg:px-8;
  }

  /* Buttons Base - Common styles derived from DS v1.0 */
  .button-base {
     @apply inline-flex items-center justify-center
            rounded-lg /* Uses --radius-md = 8px */
            font-semibold
            transition duration-150 ease-out
            focus:outline-none
            focus-visible:ring-2 focus-visible:ring-offset-2
            focus-visible:ring-[var(--color-primary-500)] focus-visible:ring-opacity-40
            active:scale-[0.98]
            border; /* Added border to base */
  }

  /* Button Sizes */
  .button-sm { @apply px-2.5 py-1.5 text-xs; }
  .button-md { @apply px-4 py-2 text-sm; } /* Default size */
  .button-lg { @apply px-5 py-2.5 text-base; }


  /* Button Variants */
  .button-primary {
    @apply button-base
           bg-[var(--color-interactive)] text-[var(--color-interactive-text)] border-transparent shadow-sm
           hover:bg-[var(--color-interactive-hover)]
           disabled:opacity-50 disabled:cursor-not-allowed;
  }

  .button-secondary {
    @apply button-base
           bg-[var(--color-card-background)] text-[var(--color-text-primary)]
           border border-[var(--color-border-default)] shadow-sm
           hover:bg-[var(--color-gray-100)]
           disabled:opacity-50 disabled:cursor-not-allowed;
    @media (prefers-color-scheme: dark) {
      @apply hover:bg-[var(--color-gray-800)];
    }
  }

  .button-ghost {
    @apply button-base
           bg-transparent text-[var(--color-interactive)] border-transparent
           hover:bg-[oklch(var(--color-primary-100)/0.7)] /* Needs color-mix() or equivalent */
           disabled:text-[var(--color-text-disabled)] disabled:bg-transparent disabled:cursor-not-allowed;
    @media (prefers-color-scheme: dark) {
      /* DS suggests dark:hover:bg-[var(--color-primary-900)]/[0.3] */
       @apply hover:bg-[oklch(var(--color-primary-900)/0.3)]; /* Needs color-mix() or equivalent */
    }
  }

  /* Card Component Style */
  .card {
    @apply bg-[var(--color-card-background)]
           rounded-xl /* Uses --radius-lg = 12px */
           border border-[var(--color-border-default)]
           shadow-md
           overflow-hidden /* Added for consistency */
           transition-all duration-200 ease-out;
     /* Default padding based on DS v1.0 rule (p-4 sm, p-5 md+) */
     /* Using p-6 as per Card.svelte original implementation for now */
     @apply p-6;
  }
  .card:hover {
    @apply shadow-lg border-[var(--color-gray-300)];
  }
  @media (prefers-color-scheme: dark) {
    .card:hover {
      @apply border-[var(--color-gray-700)];
    }
  }

  /* Input Component Style */
  .input {
    @apply block w-full
           rounded-lg /* Uses --radius-md = 8px */
           border border-[var(--color-border-default)]
           bg-[var(--color-card-background)]
           px-3 py-2 /* Match Input.svelte original padding */
           text-sm /* Match Input.svelte original text size */
           text-[var(--color-text-primary)]
           placeholder:text-[var(--color-text-placeholder)]
           shadow-sm /* Use Meridian shadow */
           transition-all duration-200 ease-out
           focus:outline-none focus:border-[var(--color-border-interactive)] focus:ring-2
           focus:ring-[var(--color-primary-100)]; /* Focus ring color */

    /* Disabled State */
    &:disabled {
       @apply bg-[var(--color-gray-100)] text-[var(--color-text-disabled)] cursor-not-allowed shadow-none;
       /* Dark mode disabled */
        @media (prefers-color-scheme: dark) {
           @apply bg-[var(--color-gray-800)] text-[var(--color-text-disabled)];
        }
    }

    /* Error State */
    &.error {
      @apply border-[var(--color-error-500)] focus:border-[var(--color-error-500)] focus:ring-[var(--color-error-100)];
    }
  }

  /* Badge Base Style */
  .badge {
    @apply inline-flex items-center
           rounded-full
           px-2.5 py-0.5
           text-xs font-medium;
  }

  /* Badge Variants */
  .badge-primary {
    @apply badge bg-[var(--color-primary-100)] text-[var(--color-primary-800)];
    @media (prefers-color-scheme: dark) {
      /* DS: dark:bg-primary-900/30 dark:text-primary-300 */
       @apply bg-[oklch(var(--color-primary-900)/0.3)] text-[var(--color-primary-300)];
    }
  }
  .badge-secondary {
    @apply badge bg-[var(--color-secondary-100)] text-[var(--color-secondary-800)];
    @media (prefers-color-scheme: dark) {
       /* Assuming similar pattern to primary */
       @apply bg-[oklch(var(--color-secondary-900)/0.3)] text-[var(--color-secondary-300)]; /* secondary-900 not defined, using gray-900 */
       @apply bg-[oklch(var(--color-gray-900)/0.3)] text-[var(--color-secondary-300)];
    }
  }
  .badge-success {
     @apply badge bg-[var(--color-success-100)] text-[var(--color-success-800)];
     @media (prefers-color-scheme: dark) {
       /* Assuming similar pattern to primary */
       @apply bg-[oklch(var(--color-success-900)/0.3)] text-[var(--color-success-300)]; /* success-900/300 not defined */
       @apply bg-[oklch(var(--color-success-700)/0.3)] text-[oklch(var(--color-success-100)/1)];
    }
  }
  .badge-warning {
     @apply badge bg-[var(--color-warning-100)] text-[var(--color-warning-800)];
     @media (prefers-color-scheme: dark) {
       /* Assuming similar pattern to primary */
       @apply bg-[oklch(var(--color-warning-900)/0.3)] text-[var(--color-warning-300)]; /* warning-900/300 not defined */
       @apply bg-[oklch(var(--color-warning-700)/0.3)] text-[oklch(var(--color-warning-100)/1)];
    }
  }
  .badge-error {
    @apply badge bg-[var(--color-error-100)] text-[var(--color-error-800)];
    @media (prefers-color-scheme: dark) {
      /* Assuming similar pattern to primary */
       @apply bg-[oklch(var(--color-error-900)/0.3)] text-[var(--color-error-300)]; /* error-900/300 not defined */
       @apply bg-[oklch(var(--color-error-700)/0.3)] text-[oklch(var(--color-error-100)/1)];
    }
  }
  .badge-neutral {
     @apply badge bg-[var(--color-neutral-100)] text-[var(--color-neutral-800)]; /* Uses aliases defined above */
     @media (prefers-color-scheme: dark) {
        /* Assuming similar pattern to primary */
        @apply bg-[oklch(var(--color-gray-900)/0.3)] text-[var(--color-gray-300)];
    }
  }

  /* Basic Checkbox Style (based on discover page) */
  input[type="checkbox"] {
    @apply h-4 w-4 rounded border-[var(--color-border-default)] text-[var(--color-interactive)] focus:ring-[var(--color-interactive)];
  }

}

/* Custom utility styles */
@layer utilities {
  /* Simple fade-in animation */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  .animate-fade-in {
    animation: fadeIn 0.5s var(--ease-out-expo) forwards;
  }

  /* Simple slide-up animation */
  @keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  .animate-slide-up {
    animation: slideUp 0.5s var(--ease-out-expo) forwards;
  }
}