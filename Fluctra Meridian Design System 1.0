**Fluctra Meridian Design System v1.1**

*(Based on v1.0, incorporating refinements from implementation)*

**Design Vision:** Professional, trustworthy, precise, and sleek. Evokes clarity and confidence, suitable for an enterprise-grade financial/crypto platform with a subtle nautical undertone (clarity, navigation, expanse). Light mode is the default.

---

**1. Foundation (Defined in `src/app.css`)**

*   **Color Palette (OKLCH - Light Mode Default):** Precise, high-contrast, professional palette with a nautical-inspired blue primary. Defined in `:root` within `@layer base`.
    *   **Primary (Deep Ocean Blue):** Trustworthy, confident blue for actions.
        *   `--color-primary-50: oklch(97% 0.03 250);`
        *   `--color-primary-100: oklch(94% 0.06 250);`
        *   `--color-primary-300: oklch(85% 0.1 250);` (Subtle hover states, Dark mode hover)
        *   `--color-primary-500: oklch(68% 0.18 250);` (Key interactive elements, links)
        *   `--color-primary-600: oklch(60% 0.21 250);` (Primary buttons)
        *   `--color-primary-700: oklch(52% 0.23 250);` (Hover/pressed states)
        *   `--color-primary-800: oklch(40% 0.2 250);` (Badge text)
        *   `--color-primary-900: oklch(35% 0.18 250);` (Dark badge bg base)
    *   **Secondary (Seafoam Teal):** Clear, modern accent for highlights, AI features. Use sparingly.
        *   `--color-secondary-100: oklch(95% 0.03 190);`
        *   `--color-secondary-300: oklch(88% 0.06 190);`
        *   `--color-secondary-500: oklch(78% 0.1 190);` (Accents, AI badges)
        *   `--color-secondary-700: oklch(60% 0.12 190);`
        *   `--color-secondary-800: oklch(45% 0.14 190);` (Badge text)
    *   **Neutrals (Grays - Crisp & Clean):** High contrast and clarity.
        *   `--color-gray-0: oklch(100% 0 0);`
        *   `--color-gray-50: oklch(99% 0.002 240);`
        *   `--color-gray-100: oklch(97% 0.004 240);`
        *   `--color-gray-200: oklch(94% 0.006 240);`
        *   `--color-gray-300: oklch(90% 0.008 240);`
        *   `--color-gray-400: oklch(82% 0.01 240);`
        *   `--color-gray-500: oklch(72% 0.012 240);`
        *   `--color-gray-600: oklch(62% 0.015 240);`
        *   `--color-gray-700: oklch(52% 0.018 240);`
        *   `--color-gray-800: oklch(42% 0.015 240);`
        *   `--color-gray-900: oklch(32% 0.012 240);`
        *   `--color-gray-950: oklch(22% 0.008 240);` (Dark card bg)
        *   `--color-gray-1000: oklch(15% 0.005 240);`
    *   **Semantic Colors (Success, Warning, Error):** Clear, accessible indicators.
        *   `--color-success-100: oklch(96% 0.05 145);` ... `--color-success-500: oklch(72% 0.16 145);` ... `--color-success-700: oklch(58% 0.18 145);` ... `--color-success-800: oklch(45% 0.2 145);`
        *   `--color-warning-100: oklch(97% 0.06 85);` ... `--color-warning-500: oklch(82% 0.17 85);` ... `--color-warning-700: oklch(68% 0.18 85);` ... `--color-warning-800: oklch(55% 0.2 85);`
        *   `--color-error-100: oklch(96% 0.06 25);` ... `--color-error-500: oklch(72% 0.23 25);` ... `--color-error-700: oklch(58% 0.25 25);` ... `--color-error-800: oklch(45% 0.27 25);`
    *   **Badge Aliases:** Defined for convenience.
        *   `--color-neutral-100: var(--color-gray-100);`
        *   `--color-neutral-800: var(--color-gray-800);`
        *   `--color-info-100: var(--color-primary-100);`
        *   `--color-info-800: var(--color-primary-800);`
    *   **Base Semantic Variables (Light Mode Defaults):**
        *   `--color-background: var(--color-gray-50);`
        *   `--color-foreground: var(--color-gray-1000);`
        *   `--color-card-background: var(--color-gray-0);`
        *   `--color-text-primary: var(--color-gray-900);`
        *   `--color-text-secondary: var(--color-gray-600);`
        *   `--color-text-placeholder: var(--color-gray-400);`
        *   `--color-text-disabled: var(--color-gray-400);`
        *   `--color-border-default: var(--color-gray-200);`
        *   `--color-border-subtle: var(--color-gray-100);`
        *   `--color-border-interactive: var(--color-primary-500);`
        *   `--color-interactive: var(--color-primary-600);`
        *   `--color-interactive-hover: var(--color-primary-700);`
        *   `--color-interactive-text: var(--color-gray-0);`
    *   **Dark Mode Overrides (Defined via `@media (prefers-color-scheme: dark)` in `@layer base`):**
        *   `--color-background: var(--color-gray-1000);`
        *   `--color-foreground: var(--color-gray-50);`
        *   `--color-card-background: var(--color-gray-950);`
        *   `--color-text-primary: var(--color-gray-50);`
        *   `--color-text-secondary: var(--color-gray-400);`
        *   `--color-text-placeholder: var(--color-gray-600);`
        *   `--color-text-disabled: var(--color-gray-700);`
        *   `--color-border-default: var(--color-gray-800);`
        *   `--color-border-subtle: var(--color-gray-900);`
        *   `--color-interactive: var(--color-primary-500);`
        *   `--color-interactive-hover: var(--color-primary-300);` /* Corrected */
        *   `--color-interactive-text: var(--color-gray-0);`
        *   Dark Badge Aliases (`--color-neutral-100`, etc.) using `color-mix`.

*   **Typography (`@layer base` & `@theme`)**
    *   **Font:** `--font-sans: 'Inter', ...;` `--font-mono: ui-monospace, ...;` (Defined in `@theme`)
    *   **Base:** Applied `--font-sans` to `body`. Set base `color: var(--color-text-primary);` `font-size: 1.0625rem;` (17px) `line-height: 1.5;`. (Defined in `@layer base`)
    *   **Headings:** `h1-h6` defined with clear size/weight differences using Tailwind utilities (`@apply text-4xl`, `@apply text-3xl`, etc.) in `@layer base`.
    *   **Links:** Defined in `@layer base` using `color: var(--color-interactive);`, `transition: color 150ms var(--ease-out-expo);`, `:hover { color: var(--color-interactive-hover); text-decoration: underline; }`.

*   **Spacing (8px Grid):** Enhance spaciousness.
    *   `--spacing: 0.5rem;` (8px) defined in `@theme`.
    *   **Tailwind v4 Usage:** Rely primarily on **standard numeric utilities** (`p-1`, `m-2`, `gap-3`, `space-y-4`, etc.). The Tailwind engine uses the `--spacing` variable (or equivalent internal value) as the base multiplier, so `p-1` = 8px, `p-2` = 16px, `p-3` = 24px, `gap-4` = 32px, `mb-8` = 64px. Avoid explicit `calc()` where possible.
    *   **Rules:** Card Padding `p-6` (48px). Section Padding e.g., `py-10` (80px), `py-12` (96px). Gaps e.g., `gap-2` (16px), `gap-3` (24px).

*   **Layout:**
    *   `.app-container`: `max-w-7xl mx-auto px-4 md:px-6 lg:px-8`. (Defined in `@layer components`)

*   **Borders & Radii:**
    *   Radii: `--radius-md: 0.5rem;` (8px), `--radius-lg: 0.75rem;` (12px), `--radius-xl: 1rem;` (16px), `--radius-full`. (Defined in `@theme`)
    *   **Usage:** `rounded-lg` (`var(--radius-md)`) for buttons/inputs. `rounded-xl` (`var(--radius-lg)`) for cards. `rounded-2xl` (`var(--radius-xl)`) for modals/larger elements. `rounded-full` (`var(--radius-full)`) for badges. Borders use `--color-border-*` variables.

*   **Shadows (`@theme`):** Defined as specified in v1.0 using OKLCH alpha.
    *   `--shadow-sm: 0 1px 2px 0 oklch(var(--color-shadow) / 0.03);`
    *   `--shadow-md: 0 2px 8px -1px oklch(var(--color-shadow) / 0.06), 0 2px 4px -2px oklch(var(--color-shadow) / 0.04);`
    *   `--shadow-lg: 0 8px 16px -4px oklch(var(--color-shadow) / 0.08), 0 4px 6px -3px oklch(var(--color-shadow) / 0.05);`
    *   `--shadow-xl: 0 16px 24px -8px oklch(var(--color-shadow) / 0.08), 0 6px 10px -6px oklch(var(--color-shadow) / 0.06);`
    *   **Usage:** Apply via Tailwind utilities `shadow-sm`, `shadow-md`, `shadow-lg`, `shadow-xl` which reference these variables.

*   **Icons (Lucide):** Standardize on `w-5 h-5` (20px). `stroke-width="1.75"`. (Implementation guideline).

**2. Materials & Effects (`@layer components` / Utilities)**

*   **Glassmorphism (`.glass`):** Defined in `@layer components` using `color-mix()` for backgrounds and borders as implemented.
    ```css
    /* Example from app.css */
    .glass {
        background-color: color-mix(in oklch, var(--color-background) 65%, transparent);
        backdrop-filter: blur(20px) saturate(180%);
        border: 1px solid color-mix(in oklch, var(--color-border-subtle) 20%, transparent);
        /* Dark mode styles also use color-mix */
    }
    ```
    *   **Usage:** Header, Mobile Menu, Dropdowns, Modals.
*   **Gradients:** Usage notes confirmed. Use variables: `from-[var(--color-primary-500)]`.

**3. Core UI Components (Defined in `src/app.css @layer components`)**

*   **Buttons:** Base styling (layout, font, transition, focus, active) incorporated directly into variant definitions. No separate `.button-base`. Uses `--radius-md`. Focus ring uses `/alpha` syntax (`focus-visible:ring-[var(--color-primary-500)/40]`).
    *   `.button-primary`: Defined with specific `bg`, `text`, `border`, `shadow`, `hover`, `disabled` states using variables.
    *   `.button-secondary`: Defined similarly. Dark mode hover specified.
    *   `.button-ghost`: Defined similarly. Hover states use `color-mix()`.
    *   **Sizes:** Separate classes `.button-sm`, `.button-md` (default), `.button-lg` define padding and text size.
    *   **Note:** Corresponding Svelte component (`Button.svelte`) uses `$$restProps` to accept standard HTML button attributes.

*   **Inputs/Selects (`.input`):** Defined with specific `bg`, `border`, `rounded-lg` (`--radius-md`), `padding`, `text size`, `placeholder`, `shadow`, `focus`, `disabled` (including dark mode), and `&.error` states using variables.
    *   **Note:** Corresponding Svelte component (`Input.svelte`) uses `$$restProps` to accept standard HTML input attributes.

*   **Cards (`.card`):** Defined with specific `bg`, `rounded-xl` (`--radius-lg`), `border`, `shadow-md`, `overflow`, `transition`, `p-6` (default padding). Hover states defined.

*   **Badges:** Base styling (`inline-flex`, `rounded-full`, `px-2.5`, `py-0.5`, `text-xs`, `font-medium`) incorporated directly into variant definitions. No separate `.badge` base.
    *   `.badge-primary`, `.badge-secondary`, `.badge-success`, `.badge-warning`, `.badge-error`, `.badge-neutral`, `.badge-info`: Defined with specific `bg` and `text` using variables. Dark mode styles defined using `color-mix()` or aliases.

**4. Animation & Motion:**

*   **Easing:** `--ease-out-expo` defined in `@theme`.
*   **Transitions:** Use `transition-all duration-200 var(--ease-out-expo)`.
*   **Animations:** `fadeIn`, `slideUp` keyframes and utility classes defined in `@layer utilities`.
*   **Loading:** Define `.skeleton` utility class (Example provided in `app.css`).

---
*(Implementation Plan section remains largely the same, but execution should follow these updated v1.1 definitions)*